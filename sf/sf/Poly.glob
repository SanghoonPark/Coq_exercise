DIGEST a0756c59fff6cbb1e9bf37bdd7ea05ff
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4720:4722 <> app
R4744:4747 Poly <> list ind
R4749:4749 Poly <> X var
R4771:4774 Poly <> list ind
R4776:4776 Poly <> X var
R4790:4791 Poly <> l1 var
R4802:4804 Poly <> nil constr
R4814:4815 Poly <> l2 var
R4821:4824 Poly <> cons constr
R4833:4836 Poly <> cons constr
R4843:4845 Poly <> app def
R4851:4852 Poly <> l2 var
R4847:4847 Poly <> X var
R4838:4838 Poly <> X var
def 4872:4875 <> snoc
R4889:4892 Poly <> list ind
R4894:4894 Poly <> X var
R4900:4900 Poly <> X var
R4906:4909 Poly <> list ind
R4911:4911 Poly <> X var
R4925:4925 Poly <> l var
R4936:4938 Poly <> nil constr
R4948:4951 Poly <> cons constr
R4958:4960 Poly <> nil constr
R4962:4962 Poly <> X var
R4955:4955 Poly <> v var
R4953:4953 Poly <> X var
R4969:4972 Poly <> cons constr
R4981:4984 Poly <> cons constr
R4991:4994 Poly <> snoc def
R5000:5000 Poly <> v var
R4996:4996 Poly <> X var
R4986:4986 Poly <> X var
def 5020:5022 <> rev
R5036:5039 Poly <> list ind
R5041:5041 Poly <> X var
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5064:5064 Poly <> l var
R5075:5077 Poly <> nil constr
R5087:5089 Poly <> nil constr
R5091:5091 Poly <> X var
R5097:5100 Poly <> cons constr
R5109:5112 Poly <> snoc def
R5117:5119 Poly <> rev def
R5121:5121 Poly <> X var
R5114:5114 Poly <> X var
def 5146:5154 <> test_rev1
R5205:5210 Coq.Init.Logic <> :type_scope:x_'='_x not
R5244:5244 Coq.Init.Logic <> :type_scope:x_'='_x not
R5162:5164 Poly <> rev def
R5171:5174 Poly <> cons constr
R5183:5186 Poly <> cons constr
R5195:5197 Poly <> nil constr
R5199:5201 Coq.Init.Datatypes <> nat ind
R5188:5190 Coq.Init.Datatypes <> nat ind
R5176:5178 Coq.Init.Datatypes <> nat ind
R5166:5168 Coq.Init.Datatypes <> nat ind
R5211:5214 Poly <> cons constr
R5223:5226 Poly <> cons constr
R5235:5237 Poly <> nil constr
R5239:5241 Coq.Init.Datatypes <> nat ind
R5228:5230 Coq.Init.Datatypes <> nat ind
R5216:5218 Coq.Init.Datatypes <> nat ind
def 5282:5290 <> test_rev2
R5314:5316 Coq.Init.Logic <> :type_scope:x_'='_x not
R5295:5297 Poly <> rev def
R5305:5307 Poly <> nil constr
R5309:5312 Basics <> bool ind
R5299:5302 Basics <> bool ind
R5317:5319 Poly <> nil constr
R5321:5324 Basics <> bool ind
mod 5361:5369 <> MumbleBaz
ind 5492:5497 MumbleBaz mumble
constr 5513:5513 MumbleBaz a
constr 5528:5528 MumbleBaz b
constr 5560:5560 MumbleBaz c
R5517:5522 Poly <> mumble ind
R5549:5554 Poly <> mumble ind
R5542:5544 Coq.Init.Datatypes <> nat ind
R5532:5537 Poly <> mumble ind
R5564:5569 Poly <> mumble ind
ind 5582:5588 MumbleBaz grumble
constr 5613:5613 MumbleBaz d
constr 5641:5641 MumbleBaz e
R5627:5633 Poly <> grumble ind
R5617:5622 Poly MumbleBaz mumble ind
R5650:5656 Poly <> grumble ind
ind 6053:6055 MumbleBaz baz
constr 6072:6072 MumbleBaz x
constr 6092:6092 MumbleBaz y
R6083:6085 Poly <> baz ind
R6076:6078 Poly <> baz ind
R6111:6113 Poly <> baz ind
R6103:6106 Basics <> bool ind
R6096:6098 Poly <> baz ind
R6205:6213 Poly MumbleBaz <> mod
def 6476:6479 <> app'
R6491:6494 Poly <> list ind
R6496:6496 Poly <> X var
R6509:6510 Poly <> l1 var
R6521:6523 Poly <> nil constr
R6533:6534 Poly <> l2 var
R6540:6543 Poly <> cons constr
R6552:6555 Poly <> cons constr
R6562:6565 Poly <> app' def
R6571:6572 Poly <> l2 var
R6567:6567 Poly <> X var
R6557:6557 Poly <> X var
R6662:6665 Poly <> app' def
R6729:6731 Poly <> app def
def 9376:9382 <> length'
R9396:9399 Poly <> list ind
R9401:9401 Poly <> X var
R9406:9408 Coq.Init.Datatypes <> nat ind
R9421:9421 Poly <> l var
R9432:9434 Poly <> nil constr
R9450:9453 Poly <> cons constr
R9462:9462 Coq.Init.Datatypes <> S constr
R9465:9471 Poly <> length' def
def 9760:9766 <> list123
R9773:9776 Poly <> cons constr
R9785:9788 Poly <> cons constr
R9797:9800 Poly <> cons constr
R9809:9811 Poly <> nil constr
R9813:9815 Coq.Init.Datatypes <> nat ind
R9802:9804 Coq.Init.Datatypes <> nat ind
R9790:9792 Coq.Init.Datatypes <> nat ind
R9778:9780 Coq.Init.Datatypes <> nat ind
def 9889:9896 <> list123'
R9901:9904 Poly <> cons constr
R9911:9914 Poly <> cons constr
R9921:9924 Poly <> cons constr
R9931:9933 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10438:10441 Poly <> cons constr
R10438:10441 Poly <> cons constr
R10523:10528 Poly <> length def
R10523:10528 Poly <> length def
R10547:10549 Poly <> app def
R10547:10549 Poly <> app def
R10572:10574 Poly <> rev def
R10572:10574 Poly <> rev def
R10594:10597 Poly <> snoc def
R10594:10597 Poly <> snoc def
def 10659:10667 <> list123''
R10672:10675 Poly <> cons constr
R10680:10683 Poly <> cons constr
R10688:10691 Poly <> cons constr
R10695:10697 Poly <> nil constr
R10709:10714 Poly <> length def
R10716:10724 Poly <> list123'' def
def 10918:10925 <> length''
R10939:10942 Poly <> list ind
R10944:10944 Poly <> X var
R10949:10951 Coq.Init.Datatypes <> nat ind
R10964:10964 Poly <> l var
R10975:10977 Poly <> nil constr
R10993:10996 Poly <> cons constr
R11005:11005 Coq.Init.Datatypes <> S constr
R11008:11015 Poly <> length'' def
def 12042:12046 <> mynil
R12050:12053 Poly <> list ind
R12055:12057 Coq.Init.Datatypes <> nat ind
R12062:12064 Poly <> nil constr
R12193:12195 Poly <> nil constr
def 12210:12215 <> mynil'
R12221:12223 Poly <> nil constr
R12225:12227 Coq.Init.Datatypes <> nat ind
R12520:12523 Poly <> cons constr
not 12507 <> ::x_'::'_x
R12605:12607 Poly <> nil constr
not 12596 <> ::'['_']'
R12640:12643 Poly <> cons constr
R12651:12654 Poly <> cons constr
R12658:12659 Poly <> ::'['_']' not
not 12619 <> ::'['_x_';'_'..'_';'_x_']'
R12689:12691 Poly <> app def
not 12676 <> ::x_'++'_x
def 12824:12833 <> list123'''
R12838:12838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12840:12841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12843:12844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12846:12846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13199:13204 <> repeat
R13222:13222 Poly <> X var
R13234:13236 Coq.Init.Datatypes <> nat ind
R13241:13244 Poly <> list ind
R13246:13246 Poly <> X var
R13280:13284 Poly <> count var
R13295:13295 Coq.Init.Datatypes <> O constr
R13300:13302 Poly <> nil constr
R13308:13308 Coq.Init.Datatypes <> S constr
R13321:13323 Poly <> ::x_'::'_x not
R13339:13339 Poly <> ::x_'::'_x not
R13320:13320 Poly <> n var
R13324:13329 Poly <> repeat def
R13331:13331 Poly <> n var
def 13357:13368 <> test_repeat1
R13386:13388 Coq.Init.Logic <> :type_scope:x_'='_x not
R13373:13378 Poly <> repeat def
R13380:13383 Basics <> true constr
R13389:13392 Poly <> cons constr
R13400:13403 Poly <> cons constr
R13410:13412 Poly <> nil constr
R13405:13408 Basics <> true constr
R13394:13397 Basics <> true constr
prf 13472:13478 <> nil_app
R13506:13509 Poly <> list ind
R13511:13511 Poly <> X var
R13524:13526 Coq.Init.Logic <> :type_scope:x_'='_x not
R13516:13518 Poly <> app def
R13523:13523 Poly <> l var
R13520:13521 Poly <> ::'['_']' not
R13527:13527 Poly <> l var
prf 13597:13604 <> rev_snoc
R13657:13657 Poly <> X var
R13692:13695 Poly <> list ind
R13697:13697 Poly <> X var
R13716:13718 Coq.Init.Logic <> :type_scope:x_'='_x not
R13702:13704 Poly <> rev def
R13707:13710 Poly <> snoc def
R13714:13714 Poly <> v var
R13712:13712 Poly <> s var
R13720:13724 Poly <> ::x_'::'_x not
R13730:13730 Poly <> ::x_'::'_x not
R13719:13719 Poly <> v var
R13725:13727 Poly <> rev def
R13729:13729 Poly <> s var
prf 13868:13881 <> rev_involutive
R13913:13916 Poly <> list ind
R13918:13918 Poly <> X var
R13934:13936 Coq.Init.Logic <> :type_scope:x_'='_x not
R13923:13925 Poly <> rev def
R13928:13930 Poly <> rev def
R13932:13932 Poly <> l var
R13937:13937 Poly <> l var
R14027:14034 Poly <> rev_snoc thm
R14027:14034 Poly <> rev_snoc thm
prf 14077:14092 <> snoc_with_append
R14153:14156 Poly <> list ind
R14158:14158 Poly <> X var
R14197:14197 Poly <> X var
R14219:14221 Coq.Init.Logic <> :type_scope:x_'='_x not
R14202:14205 Poly <> snoc def
R14218:14218 Poly <> v var
R14210:14213 Poly <> ::x_'++'_x not
R14208:14209 Poly <> l1 var
R14214:14215 Poly <> l2 var
R14224:14228 Poly <> ::x_'++'_x not
R14238:14238 Poly <> ::x_'++'_x not
R14222:14223 Poly <> l1 var
R14229:14232 Poly <> snoc def
R14237:14237 Poly <> v var
R14234:14235 Poly <> l2 var
ind 14645:14648 <> prod
constr 14675:14678 <> pair
R14692:14695 Poly <> prod ind
R14713:14716 Poly <> pair constr
R14713:14716 Poly <> pair constr
R14863:14866 Poly <> pair constr
not 14847 <> ::'('_x_','_x_')'
R14999:15002 Poly <> prod ind
not 14987 <> :type_scope:x_'*'_x
def 15625:15627 <> fst
R15648:15650 Poly <> :type_scope:x_'*'_x not
R15647:15647 Poly <> X var
R15651:15651 Poly <> Y var
R15656:15656 Poly <> X var
R15669:15669 Poly <> p var
R15676:15676 Poly <> ::'('_x_','_x_')' not
R15678:15678 Poly <> ::'('_x_','_x_')' not
R15680:15680 Poly <> ::'('_x_','_x_')' not
def 15704:15706 <> snd
R15727:15729 Poly <> :type_scope:x_'*'_x not
R15726:15726 Poly <> X var
R15730:15730 Poly <> Y var
R15735:15735 Poly <> Y var
R15748:15748 Poly <> p var
R15755:15755 Poly <> ::'('_x_','_x_')' not
R15757:15757 Poly <> ::'('_x_','_x_')' not
R15759:15759 Poly <> ::'('_x_','_x_')' not
def 16100:16106 <> combine
R16127:16130 Poly <> list ind
R16132:16132 Poly <> X var
R16141:16144 Poly <> list ind
R16146:16146 Poly <> Y var
R16162:16165 Poly <> list ind
R16169:16169 Poly <> :type_scope:x_'*'_x not
R16168:16168 Poly <> X var
R16170:16170 Poly <> Y var
R16184:16184 Poly <> ::'('_x_','_x_')' not
R16187:16187 Poly <> ::'('_x_','_x_')' not
R16190:16190 Poly <> ::'('_x_','_x_')' not
R16185:16186 Poly <> lx var
R16188:16189 Poly <> ly var
R16201:16201 Poly <> ::'('_x_','_x_')' not
R16204:16204 Poly <> ::'('_x_','_x_')' not
R16206:16206 Poly <> ::'('_x_','_x_')' not
R16202:16203 Poly <> ::'['_']' not
R16211:16212 Poly <> ::'['_']' not
R16218:16218 Poly <> ::'('_x_','_x_')' not
R16220:16220 Poly <> ::'('_x_','_x_')' not
R16223:16223 Poly <> ::'('_x_','_x_')' not
R16221:16222 Poly <> ::'['_']' not
R16228:16229 Poly <> ::'['_']' not
R16235:16235 Poly <> ::'('_x_','_x_')' not
R16241:16242 Poly <> ::'('_x_','_x_')' not
R16248:16248 Poly <> ::'('_x_','_x_')' not
R16237:16238 Poly <> ::x_'::'_x not
R16244:16245 Poly <> ::x_'::'_x not
R16258:16262 Poly <> ::x_'::'_x not
R16276:16276 Poly <> ::x_'::'_x not
R16253:16253 Poly <> ::'('_x_','_x_')' not
R16255:16255 Poly <> ::'('_x_','_x_')' not
R16257:16257 Poly <> ::'('_x_','_x_')' not
R16263:16269 Poly <> combine def
def 16986:16990 <> split
R17021:17024 Poly <> list ind
R17028:17028 Poly <> :type_scope:x_'*'_x not
R17027:17027 Poly <> X var
R17029:17029 Poly <> Y var
R17046:17046 Poly <> :type_scope:x_'*'_x not
R17053:17057 Poly <> :type_scope:x_'*'_x not
R17064:17064 Poly <> :type_scope:x_'*'_x not
R17047:17050 Poly <> list ind
R17052:17052 Poly <> X var
R17058:17061 Poly <> list ind
R17063:17063 Poly <> Y var
R17088:17092 Basics <> admit prfax
def 17104:17113 <> test_split
R17145:17147 Coq.Init.Logic <> :type_scope:x_'='_x not
R17118:17122 Poly <> split def
R17124:17124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17134:17134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17144:17144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17135:17135 Poly <> ::'('_x_','_x_')' not
R17137:17137 Poly <> ::'('_x_','_x_')' not
R17143:17143 Poly <> ::'('_x_','_x_')' not
R17138:17142 Basics <> false constr
R17125:17125 Poly <> ::'('_x_','_x_')' not
R17127:17127 Poly <> ::'('_x_','_x_')' not
R17133:17133 Poly <> ::'('_x_','_x_')' not
R17128:17132 Basics <> false constr
R17148:17148 Poly <> ::'('_x_','_x_')' not
R17154:17154 Poly <> ::'('_x_','_x_')' not
R17168:17168 Poly <> ::'('_x_','_x_')' not
R17149:17149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17151:17151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17153:17153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17155:17155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17161:17161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17167:17167 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17162:17166 Basics <> false constr
R17156:17160 Basics <> false constr
ind 17476:17481 <> option
constr 17506:17509 <> Some
constr 17531:17534 <> None
R17518:17523 Poly <> option ind
R17538:17543 Poly <> option ind
R17559:17562 Poly <> Some constr
R17559:17562 Poly <> Some constr
R17582:17585 Poly <> None constr
R17582:17585 Poly <> None constr
def 17707:17711 <> index
R17729:17731 Coq.Init.Datatypes <> nat ind
R17754:17757 Poly <> list ind
R17759:17759 Poly <> X var
R17764:17769 Poly <> option ind
R17771:17771 Poly <> X var
R17784:17784 Poly <> l var
R17795:17796 Poly <> ::'['_']' not
R17801:17804 Poly <> None constr
R17811:17814 Poly <> ::x_'::'_x not
R17824:17830 Basics <> beq_nat def
R17834:17834 Coq.Init.Datatypes <> O constr
R17832:17832 Poly <> n var
R17853:17857 Poly <> index def
R17860:17863 Coq.Init.Peano <> pred def
R17865:17865 Poly <> n var
R17841:17844 Poly <> Some constr
def 17887:17897 <> test_index1
R17921:17924 Coq.Init.Logic <> :type_scope:x_'='_x not
R17904:17908 Poly <> index def
R17912:17912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17914:17914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17916:17916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17918:17918 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17920:17920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17925:17928 Poly <> Some constr
def 17967:17977 <> test_index2
R18002:18005 Coq.Init.Logic <> :type_scope:x_'='_x not
R17984:17988 Poly <> index def
R17993:17993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17997:17997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18001:18001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17998:17998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18000:18000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17994:17994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17996:17996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18006:18009 Poly <> Some constr
R18011:18011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18013:18013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18050:18060 <> test_index3
R18082:18085 Coq.Init.Logic <> :type_scope:x_'='_x not
R18067:18071 Poly <> index def
R18076:18076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18081:18081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18077:18080 Basics <> true constr
R18086:18089 Poly <> None constr
def 18342:18347 <> hd_opt
R18365:18368 Poly <> list ind
R18370:18370 Poly <> X var
R18376:18381 Poly <> option ind
R18383:18383 Poly <> X var
R18409:18413 Basics <> admit prfax
R18544:18549 Poly <> hd_opt def
def 18561:18572 <> test_hd_opt1
R18589:18591 Coq.Init.Logic <> :type_scope:x_'='_x not
R18577:18582 Poly <> hd_opt def
R18584:18584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18586:18586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18588:18588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18592:18595 Poly <> Some constr
def 18638:18649 <> test_hd_opt2
R18672:18675 Coq.Init.Logic <> :type_scope:x_'='_x not
R18655:18660 Poly <> hd_opt def
R18663:18663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18667:18667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18671:18671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18668:18668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18670:18670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18664:18664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18666:18666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18676:18679 Poly <> Some constr
R18681:18681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18683:18683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19341:19350 <> doit3times
R19367:19367 Poly <> X var
R19364:19364 Poly <> X var
R19373:19373 Poly <> X var
R19378:19378 Poly <> X var
R19385:19385 Poly <> f var
R19388:19388 Poly <> f var
R19391:19391 Poly <> f var
R19393:19393 Poly <> n var
R19552:19561 Poly <> doit3times def
def 19633:19647 <> test_doit3times
R19671:19673 Coq.Init.Logic <> :type_scope:x_'='_x not
R19650:19659 Poly <> doit3times def
R19661:19668 Basics <> minustwo def
def 19712:19727 <> test_doit3times'
R19750:19752 Coq.Init.Logic <> :type_scope:x_'='_x not
R19730:19739 Poly <> doit3times def
R19746:19749 Basics <> true constr
R19741:19744 Basics <> negb def
R19753:19757 Basics <> false constr
R20051:20054 Coq.Init.Peano <> plus def
def 20776:20780 <> plus3
R20785:20788 Coq.Init.Peano <> plus def
R20799:20803 Poly <> plus3 def
def 20815:20824 <> test_plus3
R20838:20840 Coq.Init.Logic <> :type_scope:x_'='_x not
R20831:20835 Poly <> plus3 def
def 20878:20888 <> test_plus3'
R20912:20914 Coq.Init.Logic <> :type_scope:x_'='_x not
R20894:20903 Poly <> doit3times def
R20905:20909 Poly <> plus3 def
def 20952:20963 <> test_plus3''
R20989:20991 Coq.Init.Logic <> :type_scope:x_'='_x not
R20968:20977 Poly <> doit3times def
R20980:20983 Coq.Init.Peano <> plus def
def 21916:21925 <> prod_curry
R21958:21958 Poly <> Z var
R21950:21952 Poly <> :type_scope:x_'*'_x not
R21949:21949 Poly <> X var
R21953:21953 Poly <> Y var
R21966:21966 Poly <> X var
R21974:21974 Poly <> Y var
R21979:21979 Poly <> Z var
R21984:21984 Poly <> f var
R21986:21986 Poly <> ::'('_x_','_x_')' not
R21988:21989 Poly <> ::'('_x_','_x_')' not
R21991:21991 Poly <> ::'('_x_','_x_')' not
R21987:21987 Poly <> x var
R21990:21990 Poly <> y var
def 22136:22147 <> prod_uncurry
R22181:22181 Poly <> Z var
R22176:22176 Poly <> Y var
R22171:22171 Poly <> X var
R22190:22192 Poly <> :type_scope:x_'*'_x not
R22189:22189 Poly <> X var
R22193:22193 Poly <> Y var
R22198:22198 Poly <> Z var
R22224:22228 Basics <> admit prfax
R22366:22375 Poly <> prod_curry def
R22385:22396 Poly <> prod_uncurry def
prf 22408:22420 <> uncurry_curry
R22461:22461 Poly <> Z var
R22456:22456 Poly <> Y var
R22451:22451 Poly <> X var
R22502:22504 Coq.Init.Logic <> :type_scope:x_'='_x not
R22471:22480 Poly <> prod_curry def
R22501:22501 Poly <> y var
R22499:22499 Poly <> x var
R22483:22494 Poly <> prod_uncurry def
R22496:22496 Poly <> f var
R22505:22505 Poly <> f var
R22509:22509 Poly <> y var
R22507:22507 Poly <> x var
prf 22559:22571 <> curry_uncurry
R22644:22644 Poly <> Z var
R22635:22637 Poly <> :type_scope:x_'*'_x not
R22634:22634 Poly <> X var
R22638:22638 Poly <> Y var
R22653:22655 Poly <> :type_scope:x_'*'_x not
R22652:22652 Poly <> X var
R22656:22656 Poly <> Y var
R22691:22693 Coq.Init.Logic <> :type_scope:x_'='_x not
R22662:22673 Poly <> prod_uncurry def
R22690:22690 Poly <> p var
R22676:22685 Poly <> prod_curry def
R22687:22687 Poly <> f var
R22694:22694 Poly <> f var
R22696:22696 Poly <> p var
def 23096:23101 <> filter
R23122:23125 Basics <> bool ind
R23119:23119 Poly <> X var
R23131:23134 Poly <> list ind
R23136:23136 Poly <> X var
R23158:23161 Poly <> list ind
R23163:23163 Poly <> X var
R23177:23177 Poly <> l var
R23188:23189 Poly <> ::'['_']' not
R23198:23199 Poly <> ::'['_']' not
R23206:23209 Poly <> ::x_'::'_x not
R23218:23221 Poly <> test var
R23286:23291 Poly <> filter def
R23293:23296 Poly <> test var
R23231:23235 Poly <> ::x_'::'_x not
R23249:23249 Poly <> ::x_'::'_x not
R23236:23241 Poly <> filter def
R23243:23246 Poly <> test var
def 23477:23488 <> test_filter1
R23513:23515 Coq.Init.Logic <> :type_scope:x_'='_x not
R23491:23496 Poly <> filter def
R23504:23504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23506:23506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23508:23508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23510:23510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23512:23512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23498:23502 Basics <> evenb def
R23516:23516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23518:23518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23520:23520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23572:23582 <> length_is_1
R23600:23603 Poly <> list ind
R23605:23605 Poly <> X var
R23610:23613 Basics <> bool ind
R23620:23626 Basics <> beq_nat def
R23629:23634 Poly <> length def
R23636:23636 Poly <> l var
def 23651:23662 <> test_filter2
R23737:23741 Coq.Init.Logic <> :type_scope:x_'='_x not
R23669:23674 Poly <> filter def
R23699:23700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23707:23708 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23712:23713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23717:23718 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23726:23727 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23730:23731 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23735:23736 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23732:23732 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23734:23734 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23728:23729 Poly <> ::'['_']' not
R23719:23719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23721:23721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23723:23723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23725:23725 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23714:23714 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23716:23716 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23709:23709 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23711:23711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23701:23701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23703:23704 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23706:23706 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23676:23686 Poly <> length_is_1 def
R23742:23743 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23747:23748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23752:23753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23757:23758 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23754:23754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23756:23756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23749:23749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23751:23751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23744:23744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23746:23746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23929:23944 <> countoddmembers'
R23949:23952 Poly <> list ind
R23954:23956 Coq.Init.Datatypes <> nat ind
R23961:23963 Coq.Init.Datatypes <> nat ind
R23970:23975 Poly <> length def
R23978:23983 Poly <> filter def
R23990:23990 Poly <> l var
R23985:23988 Basics <> oddb def
def 24003:24024 <> test_countoddmembers'1
R24059:24061 Coq.Init.Logic <> :type_scope:x_'='_x not
R24029:24044 Poly <> countoddmembers' def
R24046:24046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24048:24048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24050:24050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24052:24052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24054:24054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24056:24056 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24058:24058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24099:24120 <> test_countoddmembers'2
R24149:24151 Coq.Init.Logic <> :type_scope:x_'='_x not
R24125:24140 Poly <> countoddmembers' def
R24142:24142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24144:24144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24146:24146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24148:24148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24189:24210 <> test_countoddmembers'3
R24235:24237 Coq.Init.Logic <> :type_scope:x_'='_x not
R24215:24230 Poly <> countoddmembers' def
R24232:24234 Poly <> nil constr
def 25104:25117 <> test_anon_fun'
R25151:25153 Coq.Init.Logic <> :type_scope:x_'='_x not
R25122:25131 Poly <> doit3times def
R25144:25146 Basics <> :nat_scope:x_'*'_x not
R25143:25143 Poly <> n var
R25147:25147 Poly <> n var
def 25290:25302 <> test_filter2'
R25397:25401 Coq.Init.Logic <> :type_scope:x_'='_x not
R25309:25314 Poly <> filter def
R25359:25360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25367:25368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25372:25373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25377:25378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25386:25387 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25390:25391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25395:25396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25392:25392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25394:25394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25388:25389 Poly <> ::'['_']' not
R25379:25379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25381:25381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25383:25383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25385:25385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25374:25374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25376:25376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25369:25369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25371:25371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25361:25361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25363:25364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25366:25366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25326:25332 Basics <> beq_nat def
R25335:25340 Poly <> length def
R25342:25342 Poly <> l var
R25402:25403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25407:25408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25412:25413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25417:25418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25414:25414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25416:25416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25409:25409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25411:25411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25404:25404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25406:25406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25721:25735 <> filter_even_gt7
R25742:25745 Poly <> list ind
R25747:25749 Coq.Init.Datatypes <> nat ind
R25754:25757 Poly <> list ind
R25759:25761 Coq.Init.Datatypes <> nat ind
R25787:25791 Basics <> admit prfax
def 25803:25824 <> test_filter_even_gt7_1
R25865:25867 Coq.Init.Logic <> :type_scope:x_'='_x not
R25830:25844 Poly <> filter_even_gt7 def
R25846:25846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25848:25848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25850:25850 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25852:25852 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25854:25854 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25857:25857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25859:25859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25862:25862 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25864:25864 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25868:25868 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25871:25871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25874:25874 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25876:25876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25918:25939 <> test_filter_even_gt7_2
R25975:25977 Coq.Init.Logic <> :type_scope:x_'='_x not
R25945:25959 Poly <> filter_even_gt7 def
R25961:25961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25963:25963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25965:25965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25967:25967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25970:25970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25974:25974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25978:25979 Poly <> ::'['_']' not
def 26633:26641 <> partition
R26667:26670 Basics <> bool ind
R26662:26662 Poly <> X var
R26678:26681 Poly <> list ind
R26683:26683 Poly <> X var
R26715:26717 Poly <> :type_scope:x_'*'_x not
R26709:26712 Poly <> list ind
R26714:26714 Poly <> X var
R26718:26721 Poly <> list ind
R26723:26723 Poly <> X var
R26747:26751 Basics <> admit prfax
def 26763:26777 <> test_partition1
R26806:26808 Coq.Init.Logic <> :type_scope:x_'='_x not
R26780:26788 Poly <> partition def
R26795:26795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26797:26797 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26799:26799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26801:26801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26803:26803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26805:26805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26790:26793 Basics <> oddb def
R26809:26809 Poly <> ::'('_x_','_x_')' not
R26817:26818 Poly <> ::'('_x_','_x_')' not
R26824:26824 Poly <> ::'('_x_','_x_')' not
R26810:26810 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26812:26812 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26814:26814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26816:26816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26819:26819 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26821:26821 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26823:26823 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26864:26878 <> test_partition2
R26915:26917 Coq.Init.Logic <> :type_scope:x_'='_x not
R26881:26889 Poly <> partition def
R26908:26908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26910:26910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26912:26912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26914:26914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26901:26905 Basics <> false constr
R26918:26918 Poly <> ::'('_x_','_x_')' not
R26921:26922 Poly <> ::'('_x_','_x_')' not
R26930:26930 Poly <> ::'('_x_','_x_')' not
R26919:26920 Poly <> ::'['_']' not
R26923:26923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26925:26925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26927:26927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26929:26929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27119:27121 <> map
R27140:27140 Poly <> Y var
R27137:27137 Poly <> X var
R27146:27149 Poly <> list ind
R27151:27151 Poly <> X var
R27170:27173 Poly <> list ind
R27175:27175 Poly <> Y var
R27189:27189 Poly <> l var
R27200:27201 Poly <> ::'['_']' not
R27210:27211 Poly <> ::'['_']' not
R27218:27221 Poly <> ::x_'::'_x not
R27227:27227 Poly <> ::x_'::'_x not
R27231:27236 Poly <> ::x_'::'_x not
R27244:27244 Poly <> ::x_'::'_x not
R27228:27228 Poly <> f var
R27237:27239 Poly <> map def
R27241:27241 Poly <> f var
def 27472:27480 <> test_map1
R27503:27505 Coq.Init.Logic <> :type_scope:x_'='_x not
R27483:27485 Poly <> map def
R27496:27496 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27498:27498 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27500:27500 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27502:27502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27488:27491 Coq.Init.Peano <> plus def
R27506:27506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27508:27508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27510:27510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27512:27512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27821:27829 <> test_map2
R27850:27852 Coq.Init.Logic <> :type_scope:x_'='_x not
R27832:27834 Poly <> map def
R27841:27841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27843:27843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27845:27845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27847:27847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27849:27849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27836:27839 Basics <> oddb def
R27853:27853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27859:27859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27864:27864 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27870:27870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27875:27875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27871:27874 Basics <> true constr
R27865:27869 Basics <> false constr
R27860:27863 Basics <> true constr
R27854:27858 Basics <> false constr
def 28062:28070 <> test_map3
R28118:28122 Coq.Init.Logic <> :type_scope:x_'='_x not
R28077:28079 Poly <> map def
R28109:28109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28111:28111 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28113:28113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28115:28115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28117:28117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28091:28091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28099:28099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28106:28106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28100:28103 Basics <> oddb def
R28105:28105 Poly <> n var
R28092:28096 Basics <> evenb def
R28098:28098 Poly <> n var
R28123:28123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28136:28136 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28149:28149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28162:28162 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28175:28175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28163:28163 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28169:28169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28174:28174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28170:28173 Basics <> true constr
R28164:28168 Basics <> false constr
R28150:28150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28155:28155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28161:28161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28156:28160 Basics <> false constr
R28151:28154 Basics <> true constr
R28137:28137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28143:28143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28148:28148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28144:28147 Basics <> true constr
R28138:28142 Basics <> false constr
R28124:28124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28129:28129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28135:28135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28130:28134 Basics <> false constr
R28125:28128 Basics <> true constr
prf 28374:28380 <> map_rev
R28414:28414 Poly <> Y var
R28409:28409 Poly <> X var
R28422:28425 Poly <> list ind
R28427:28427 Poly <> X var
R28446:28448 Coq.Init.Logic <> :type_scope:x_'='_x not
R28433:28435 Poly <> map def
R28440:28442 Poly <> rev def
R28444:28444 Poly <> l var
R28437:28437 Poly <> f var
R28449:28451 Poly <> rev def
R28454:28456 Poly <> map def
R28460:28460 Poly <> l var
R28458:28458 Poly <> f var
def 28962:28969 <> flat_map
R28990:28993 Poly <> list ind
R28995:28995 Poly <> Y var
R28985:28985 Poly <> X var
R29001:29004 Poly <> list ind
R29006:29006 Poly <> X var
R29031:29034 Poly <> list ind
R29036:29036 Poly <> Y var
R29063:29067 Basics <> admit prfax
def 29079:29092 <> test_flat_map1
R29132:29136 Coq.Init.Logic <> :type_scope:x_'='_x not
R29097:29104 Poly <> flat_map def
R29125:29125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29127:29127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29129:29129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29131:29131 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29116:29116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29118:29118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29120:29120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29122:29122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29121:29121 Poly <> n var
R29119:29119 Poly <> n var
R29117:29117 Poly <> n var
R29137:29137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29139:29140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29142:29143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29145:29146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29148:29149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29151:29152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29154:29155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29157:29158 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29160:29161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29163:29163 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29368:29377 <> option_map
R29402:29402 Poly <> Y var
R29397:29397 Poly <> X var
R29411:29416 Poly <> option ind
R29418:29418 Poly <> X var
R29445:29450 Poly <> option ind
R29452:29452 Poly <> Y var
R29465:29466 Poly <> xo var
R29479:29482 Poly <> None constr
R29487:29490 Poly <> None constr
R29498:29501 Poly <> Some constr
R29508:29511 Poly <> Some constr
R29514:29514 Poly <> f var
def 30336:30339 <> fold
R30362:30362 Poly <> Y var
R30359:30359 Poly <> Y var
R30356:30356 Poly <> X var
R30368:30371 Poly <> list ind
R30373:30373 Poly <> X var
R30379:30379 Poly <> Y var
R30384:30384 Poly <> Y var
R30397:30397 Poly <> l var
R30408:30410 Poly <> nil constr
R30415:30415 Poly <> b var
R30422:30425 Poly <> ::x_'::'_x not
R30431:30431 Poly <> f var
R30436:30439 Poly <> fold def
R30445:30445 Poly <> b var
R30441:30441 Poly <> f var
R30929:30932 Poly <> fold def
R30934:30937 Basics <> andb def
def 30999:31011 <> fold_example1
R31036:31038 Coq.Init.Logic <> :type_scope:x_'='_x not
R31015:31018 Poly <> fold def
R31025:31025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31027:31027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31029:31029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31031:31031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31033:31033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31020:31023 Coq.Init.Peano <> mult def
def 31077:31089 <> fold_example2
R31130:31132 Coq.Init.Logic <> :type_scope:x_'='_x not
R31093:31096 Poly <> fold def
R31126:31129 Basics <> true constr
R31103:31103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31108:31108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31113:31113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31119:31119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31124:31124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31120:31123 Basics <> true constr
R31114:31118 Basics <> false constr
R31109:31112 Basics <> true constr
R31104:31107 Basics <> true constr
R31098:31101 Basics <> andb def
R31133:31137 Basics <> false constr
def 31174:31186 <> fold_example3
R31221:31223 Coq.Init.Logic <> :type_scope:x_'='_x not
R31190:31193 Poly <> fold def
R31219:31220 Poly <> ::'['_']' not
R31200:31200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31204:31204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31207:31207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31213:31213 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31217:31217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31214:31214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31216:31216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31208:31208 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31210:31210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31212:31212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31205:31206 Poly <> ::'['_']' not
R31201:31201 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31203:31203 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31195:31197 Poly <> app def
R31224:31224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31226:31226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31228:31228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31230:31230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31232:31232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32149:32156 <> constfun
R32172:32172 Poly <> X var
R32182:32182 Poly <> X var
R32177:32179 Coq.Init.Datatypes <> nat ind
R32196:32198 Coq.Init.Datatypes <> nat ind
R32204:32204 Poly <> x var
def 32219:32223 <> ftrue
R32228:32235 Poly <> constfun def
R32237:32240 Basics <> true constr
def 32252:32268 <> constfun_example1
R32279:32281 Coq.Init.Logic <> :type_scope:x_'='_x not
R32272:32276 Poly <> ftrue def
R32282:32285 Basics <> true constr
def 32322:32338 <> constfun_example2
R32357:32359 Coq.Init.Logic <> :type_scope:x_'='_x not
R32343:32350 Poly <> constfun def
def 32703:32710 <> override
R32731:32731 Poly <> X var
R32726:32728 Coq.Init.Datatypes <> nat ind
R32737:32739 Coq.Init.Datatypes <> nat ind
R32745:32745 Poly <> X var
R32755:32755 Poly <> X var
R32750:32752 Coq.Init.Datatypes <> nat ind
R32769:32771 Coq.Init.Datatypes <> nat ind
R32780:32786 Basics <> beq_nat def
R32790:32791 Poly <> k' var
R32788:32788 Poly <> k var
R32805:32805 Poly <> f var
R32807:32808 Poly <> k' var
R32798:32798 Poly <> x var
def 33007:33017 <> fmostlytrue
R33022:33029 Poly <> override def
R33058:33062 Basics <> false constr
R33032:33039 Poly <> override def
R33049:33053 Basics <> false constr
R33041:33045 Poly <> ftrue def
def 33086:33102 <> override_example1
R33119:33121 Coq.Init.Logic <> :type_scope:x_'='_x not
R33106:33116 Poly <> fmostlytrue def
R33122:33125 Basics <> true constr
def 33162:33178 <> override_example2
R33195:33197 Coq.Init.Logic <> :type_scope:x_'='_x not
R33182:33192 Poly <> fmostlytrue def
R33198:33202 Basics <> false constr
def 33239:33255 <> override_example3
R33272:33274 Coq.Init.Logic <> :type_scope:x_'='_x not
R33259:33269 Poly <> fmostlytrue def
R33275:33278 Basics <> true constr
def 33315:33331 <> override_example4
R33348:33350 Coq.Init.Logic <> :type_scope:x_'='_x not
R33335:33345 Poly <> fmostlytrue def
R33351:33355 Basics <> false constr
prf 33656:33671 <> override_example
R33685:33688 Basics <> bool ind
R33726:33728 Coq.Init.Logic <> :type_scope:x_'='_x not
R33695:33702 Poly <> override def
R33719:33722 Basics <> true constr
R33705:33712 Poly <> constfun def
R33714:33714 Poly <> b var
R33729:33729 Poly <> b var
prf 34754:34771 <> unfold_example_bad
R34815:34817 Coq.Init.Logic <> :type_scope:x_'='_x not
R34811:34813 Basics <> :nat_scope:x_'+'_x not
R34804:34808 Poly <> plus3 def
R34810:34810 Poly <> n var
R34819:34821 Basics <> :nat_scope:x_'+'_x not
R34818:34818 Poly <> m var
R34794:34796 Coq.Init.Logic <> :type_scope:x_'='_x not
R34790:34792 Basics <> :nat_scope:x_'+'_x not
R34793:34793 Poly <> n var
R34797:34797 Poly <> m var
prf 35185:35198 <> unfold_example
R35242:35244 Coq.Init.Logic <> :type_scope:x_'='_x not
R35238:35240 Basics <> :nat_scope:x_'+'_x not
R35231:35235 Poly <> plus3 def
R35237:35237 Poly <> n var
R35246:35248 Basics <> :nat_scope:x_'+'_x not
R35245:35245 Poly <> m var
R35221:35223 Coq.Init.Logic <> :type_scope:x_'='_x not
R35217:35219 Basics <> :nat_scope:x_'+'_x not
R35220:35220 Poly <> n var
R35224:35224 Poly <> m var
R35284:35288 Poly <> plus3 def
prf 35505:35515 <> override_eq
R35547:35547 Poly <> X var
R35542:35544 Coq.Init.Datatypes <> nat ind
R35571:35573 Coq.Init.Logic <> :type_scope:x_'='_x not
R35554:35561 Poly <> override def
R35567:35567 Poly <> x var
R35565:35565 Poly <> k var
R35563:35563 Poly <> f var
R35570:35570 Poly <> k var
R35574:35574 Poly <> x var
R35611:35618 Poly <> override def
R35634:35645 Induction <> beq_nat_refl thm
R35634:35645 Induction <> beq_nat_refl thm
prf 35843:35854 <> override_neq
R35896:35896 Poly <> X var
R35891:35893 Coq.Init.Datatypes <> nat ind
R35965:35967 Coq.Init.Logic <> :type_scope:x_'='_x not
R35945:35952 Poly <> override def
R35959:35960 Poly <> x2 var
R35956:35957 Poly <> k2 var
R35954:35954 Poly <> f var
R35963:35964 Poly <> k1 var
R35968:35969 Poly <> x1 var
R35930:35932 Coq.Init.Logic <> :type_scope:x_'='_x not
R35917:35923 Basics <> beq_nat def
R35928:35929 Poly <> k1 var
R35925:35926 Poly <> k2 var
R35933:35937 Basics <> false constr
R35906:35908 Coq.Init.Logic <> :type_scope:x_'='_x not
R35902:35902 Poly <> f var
R35904:35905 Poly <> k1 var
R35909:35910 Poly <> x1 var
def 36464:36474 <> fold_length
R36492:36495 Poly <> list ind
R36497:36497 Poly <> X var
R36502:36504 Coq.Init.Datatypes <> nat ind
R36511:36514 Poly <> fold def
R36533:36533 Poly <> l var
R36528:36528 Coq.Init.Datatypes <> S constr
R36530:36530 Poly <> n var
def 36547:36563 <> test_fold_length1
R36586:36588 Coq.Init.Logic <> :type_scope:x_'='_x not
R36567:36577 Poly <> fold_length def
R36579:36579 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36581:36581 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36583:36583 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36585:36585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 36674:36692 <> fold_length_correct
R36710:36713 Poly <> list ind
R36715:36715 Poly <> X var
R36734:36736 Coq.Init.Logic <> :type_scope:x_'='_x not
R36721:36731 Poly <> fold_length def
R36733:36733 Poly <> l var
R36737:36742 Poly <> length def
R36744:36744 Poly <> l var
def 36923:36930 <> fold_map
R36953:36953 Poly <> Y var
R36948:36948 Poly <> X var
R36961:36964 Poly <> list ind
R36966:36966 Poly <> X var
R36971:36974 Poly <> list ind
R36976:36976 Poly <> Y var
R37000:37004 Basics <> admit prfax
mod 37643:37648 <> Church
def 37993:37995 Church nat
R38034:38034 Poly <> X var
R38029:38029 Poly <> X var
R38023:38023 Poly <> X var
R38018:38018 Poly <> X var
def 38172:38174 Church one
R38178:38180 Poly Church nat def
R38213:38213 Poly <> X var
R38208:38208 Poly <> X var
R38221:38221 Poly <> X var
R38227:38227 Poly <> f var
R38229:38229 Poly <> x var
def 38298:38300 Church two
R38304:38306 Poly Church nat def
R38338:38338 Poly <> X var
R38333:38333 Poly <> X var
R38346:38346 Poly <> X var
R38352:38352 Poly <> f var
R38355:38355 Poly <> f var
R38357:38357 Poly <> x var
def 38511:38514 Church zero
R38518:38520 Poly Church nat def
R38552:38552 Poly <> X var
R38547:38547 Poly <> X var
R38560:38560 Poly <> X var
R38566:38566 Poly <> x var
def 38834:38838 Church three
R38842:38844 Poly Church nat def
R38850:38859 Poly Church doit3times def
def 39070:39073 Church succ
R39080:39082 Poly Church nat def
R39087:39089 Poly Church nat def
R39115:39119 Basics <> admit prfax
def 39131:39136 Church succ_1
R39149:39151 Coq.Init.Logic <> :type_scope:x_'='_x not
R39140:39143 Poly Church succ def
R39145:39148 Poly Church zero def
R39152:39154 Poly Church one def
def 39202:39207 Church succ_2
R39219:39221 Coq.Init.Logic <> :type_scope:x_'='_x not
R39211:39214 Poly Church succ def
R39216:39218 Poly Church one def
R39222:39224 Poly Church two def
def 39272:39277 Church succ_3
R39289:39291 Coq.Init.Logic <> :type_scope:x_'='_x not
R39281:39284 Poly Church succ def
R39286:39288 Poly Church two def
R39292:39296 Poly Church three def
def 39387:39390 Church plus
R39399:39401 Poly Church nat def
R39406:39408 Poly Church nat def
R39434:39438 Basics <> admit prfax
def 39450:39455 Church plus_1
R39472:39474 Coq.Init.Logic <> :type_scope:x_'='_x not
R39459:39462 Poly Church plus def
R39469:39471 Poly Church one def
R39464:39467 Poly Church zero def
R39475:39477 Poly Church one def
def 39525:39530 Church plus_2
R39548:39550 Coq.Init.Logic <> :type_scope:x_'='_x not
R39534:39537 Poly Church plus def
R39543:39547 Poly Church three def
R39539:39541 Poly Church two def
R39551:39554 Poly Church plus def
R39562:39564 Poly Church two def
R39556:39560 Poly Church three def
def 39612:39617 Church plus_3
R39648:39650 Coq.Init.Logic <> :type_scope:x_'='_x not
R39623:39626 Poly Church plus def
R39643:39647 Poly Church three def
R39629:39632 Poly Church plus def
R39638:39640 Poly Church two def
R39634:39636 Poly Church two def
R39651:39654 Poly Church plus def
R39661:39664 Poly Church plus def
R39672:39676 Poly Church three def
R39666:39670 Poly Church three def
R39656:39658 Poly Church one def
def 39751:39754 Church mult
R39763:39765 Poly Church nat def
R39770:39772 Poly Church nat def
R39799:39803 Basics <> admit prfax
def 39815:39820 Church mult_1
R39836:39838 Coq.Init.Logic <> :type_scope:x_'='_x not
R39824:39827 Poly Church mult def
R39833:39835 Poly Church one def
R39829:39831 Poly Church one def
R39839:39841 Poly Church one def
def 39889:39894 Church mult_2
R39926:39928 Coq.Init.Logic <> :type_scope:x_'='_x not
R39898:39901 Poly Church mult def
R39909:39912 Poly Church plus def
R39920:39924 Poly Church three def
R39914:39918 Poly Church three def
R39903:39906 Poly Church zero def
R39929:39932 Poly Church zero def
def 39980:39985 Church mult_3
R40003:40005 Coq.Init.Logic <> :type_scope:x_'='_x not
R39989:39992 Poly Church mult def
R39998:40002 Poly Church three def
R39994:39996 Poly Church two def
R40006:40009 Poly Church plus def
R40017:40021 Poly Church three def
R40011:40015 Poly Church three def
def 40344:40346 Church exp
R40355:40357 Poly Church nat def
R40362:40364 Poly Church nat def
R40390:40394 Basics <> admit prfax
def 40406:40410 Church exp_1
R40425:40427 Coq.Init.Logic <> :type_scope:x_'='_x not
R40414:40416 Poly Church exp def
R40422:40424 Poly Church two def
R40418:40420 Poly Church two def
R40428:40431 Poly Church plus def
R40437:40439 Poly Church two def
R40433:40435 Poly Church two def
def 40487:40491 Church exp_2
R40508:40510 Coq.Init.Logic <> :type_scope:x_'='_x not
R40495:40497 Poly Church exp def
R40505:40507 Poly Church two def
R40499:40503 Poly Church three def
R40511:40514 Poly Church plus def
R40542:40544 Poly Church one def
R40517:40520 Poly Church mult def
R40527:40530 Poly Church mult def
R40536:40538 Poly Church two def
R40532:40534 Poly Church two def
R40522:40524 Poly Church two def
def 40592:40596 Church exp_3
R40614:40616 Coq.Init.Logic <> :type_scope:x_'='_x not
R40600:40602 Poly Church exp def
R40610:40613 Poly Church zero def
R40604:40608 Poly Church three def
R40617:40619 Poly Church one def
R40663:40668 Poly Church <> mod
